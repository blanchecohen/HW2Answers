{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf820
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 1.32 To add a new variable to a circle object, you would need to double click on the circle class and edit the code to include a new variable. Initially you would add the new variable to the code\'92s definition of circle where it lists all of the other variables, and then you would need to add any additional information.  \
\
1.33 public void send(String msg)\
\
1.34 public int average(int x, int y)\
\
1.35 The textbook is an object, as it is a specific instance of the class computer science pedagogy, textbook, or reading material.   \
\
1.36 An object can have many different classes because a specific object can match the description of many classes. For instance, the textbook we are studying fits into many different classes, like textbooks, paper products, or English literature. \
\
2.6 Student example:\
/**\
*comments\
*/\
public class Student\
\{\
\}\
  \
LabClass example:\
/**\
*comments\
*/\
public  class LabClass\
\{\
\}\
\
2.11 The constructor in the TicketMachine example differs from the methods of the class in both its header and its content.  The syntax in the constructor header does not contain a return type (int) whereas the method headers do contain return types. Additionally, the constructor header concerns the class (TicketMachine) while the method headers concern specific variables of the class (price, balance, and total). The content of the constructor lists the values at which the ticket machine is to be set at its debut, while the content of the methods consist of return statements and equation for calculating balance. \
 \
2.17 public int getStatus()\
\{\
	return status;\
\}\
\
2.21 public Pet(String petsName)\
\{\
	name = petsName;\
\}\
\
2.22 public Date(String month, int date, int year) \
\
2.23 The header and body of the getBalance and getPrice methods are identical, except in their respective objects, balance and price. The comments explain their different functions, but the return statement formula is identical in each method.\
\
2.26 /**\
* return the total of money collected\
*/\
public int getTotal()\
\{\
	return total;\
\}\
\
2.28 The crucial difference between the getPrice and printTicket headers is the return type. The getPrice method lists the return type int, indicating that it will return a whole number. The printTicket method lists the type void, indicating that it will not return a value because its function is to perform an action (printing the ticket). \
\
2.29 The insertMoney and printTicket methods do not have return statements as indicated by their void return types in their headers. These methods perform actions, like calculating the total and printing tickets, but they do not return values to the user. \
\
2.33 score = score + points;\
\
2.35 discount = price - amount;\
\
2.37 public void prompt()\
\{\
	System.out.println(\'93Please insert the correct amount of money.\'94);\
\}\
\
2.41 public void showPrice()\
\{\
	System.out.println(\'93The price of a ticket is\'94 + price + \'93cents\'94);\
\}}